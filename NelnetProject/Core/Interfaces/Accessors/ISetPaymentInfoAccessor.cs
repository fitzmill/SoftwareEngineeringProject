using Core.DTOs;

namespace Core.Interfaces
{
    /// <summary>
    /// Sets payment info in Payment Spring
    /// </summary>
    public interface ISetPaymentInfoAccessor
    {
        /// <summary>
        /// Creates a new customer with paymentSpring
        /// </summary>
        /// <param name="customerInfo">The information neccessary</param>
        /// <returns>The customer id generated by paymentSpring</returns>
        string CreateCustomer(UserPaymentInfoDTO customerInfo);

        /// <summary>
        /// Updates a user's name and address information on paymentSpring
        /// </summary>
        /// <param name="paymentAddressInfo">The new information to be stored with the customer</param>
        void UpdateCustomerBillingInformation(PaymentAddressDTO paymentAddressInfo);

        /// <summary>
        /// Updates a user's card information on paymentSpring
        /// </summary>
        /// <param name="paymentCardInfo">The new information to be stored with the customer</param>
        void UpdateCustomerCardInformation(PaymentCardDTO paymentCardInfo);

        /// <summary>
        /// Deletes a users information from paymentSpring
        /// </summary>
        /// <param name="customerID">The id of the customer to delete</param>
        void DeleteCustomer(string customerID);
    }
}
